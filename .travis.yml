language: python
dist: xenial

# python:
#   - "3.6"
#   - "3.7"

env:
    global:
      - COVERALLS_PARALLEL=true
    matrix:
      # Labeling
      - TEST_FILE=tests/labeling/
      # classification part 1
      - TEST_FILE="tests/classification/test_cnn_lstm.py tests/classification/test_cnn_gru.py tests/classification/test_cnn.py tests/classification/test_kmax_cnn.py"
      # classification part 2
      - TEST_FILE="tests/classification/test_r_cnn.py tests/classification/test_dropout_bigru.py tests/classification/test_avcnn.py tests/classification/test_bi_gru.py"
      # classification part 3
      - TEST_FILE="tests/classification/test_dpcnn.py tests/classification/test_bi_lstm.py tests/classification/test_avrnn_model.py tests/classification/test_dropout_avrnn.py"
      - TEST_FILE="tests/test_callbacks.py tests/test_corpus.py tests/test_processor.py"
      - TEST_FILE=tests/test_custom_multi_output_classification.py
      # Embedding
      - TEST_FILE=tests/embedding/

cache: pip

jobs:
  include:
    - stage: test
      python:
        - "3.6"
        - "3.7"
      before_install:
        - export BOTO_CONFIG=/dev/null

      addons:
        sonarcloud:
          organization: "brikerman-github"
          token:
            secure: $SONAR_TOKEN

      install:
        - pip install jieba
        - pip install python-coveralls
        - pip install -e .
        - pip install tensorflow==1.14.0
        - pip install coverage
        - pip install nose
        - pip install pytest pytest-cov
        - pip install flake8 flake8-builtins
        - python -c "import kashgari;print(f'kashgari version {kashgari.__version__}')"
        -
      script:
        - git fetch --unshallow --quiet
        - flake8 kashgari
        - nosetests --with-coverage --cover-html --cover-html-dir=htmlcov --cover-xml --cover-xml-file=coverage.xml --with-xunit --cover-package="kashgari" $TEST_FILE

      after_script:
        - sonar-scanner
        - coveralls

      notifications:
        webhooks: https://coveralls.io/webhook

    - stage: Update Document
      python: "3.6"
      install:
        - echo -e "machine github.com\n  login ${GITHUB_TOKEN}" > ~/.netrc
        - pip install mkdocs mkdocs-material pymdown-extensions
      script:
        - cd mkdocs
        - mkdocs gh-deploy --force --clean
      branches:
        only:
          - master
